#事务-TRANSACTION
##事务针对于DML,MySQL中innodb才支持事务
##ACID-事物的4大特性
1.原子性(Atomicity)
	事务的所有操作只有成功和失败,操作期间不会去对数据库数据进行增删改操作,只记录操作,只有commit后才会去修改数据库的数据.事务失败就会rollback,数据不会有任何变化.
2.一致性（Consistency）
	会话的双方要同时进行的DML操作,使得事务执行后数据库从一个一致性状态变到另一个一致性状态.
3.隔离性（Isolation）
	事务之间是相互独立的两个对象,可以设置不同的隔离级别.
4.持久性（Durability）
	事务终结的标志,提交后的事务将会永久性改变数据库的数据.
	

解决不可重复读的问题只需锁住满足条件的行，解决幻读需要锁表
##隔离性的隔离级别
1.read uncommitted ->脏读
	这种隔离级别下 两个事务A B,A 没有提交数据 ,B 读到了A没有commit的数据(事务A正在操作的数据),这种数据叫做dirty data,这种行为叫做dirty read,一般只在理论上存在;	.

2.read committed -> 不可重复度
	两个事务A B,A提交数据,B就读到A的数据,这种隔离级别的缺点就是不可重复度,即会话双方一方修改,一方读取,总是读取不到正确数据.
	不可重复读的重点是修改.
3.repeatable read -> 幻读
	看这名字就知道就是来解决无法重复读的问题的.事务A开始时,不管事务BCD修改数据还是提交事务,都不会改变A读取的数据.
	幻读:幻读是指当事务不是独立执行时发生的一种现象.事务A读取与搜索条件相匹配的若干行。
	事务B以插入或删除行等方式来修改事务A的结果集，然后再提交。这时候事务A的用户发现表中还存在没有修改的数据行,就像出现了幻觉一样.
	
	
4.serializable -> 效率低
	不会出现上述问题,但由于进行了锁表操作,所以会降低吞吐量.
	解决不可重复读的问题只需锁住满足条件的行，解决幻读需要锁表.	
##mysql 查询和修改数据库事务
1.查询事务

	select @@transaction_isolation
2.修改隔离级别
	set global transaction isolation level read committed 修改后要重启dos窗口方可生效.
3.启动MySQL中的事务
	start transaction 
	commit | rollback